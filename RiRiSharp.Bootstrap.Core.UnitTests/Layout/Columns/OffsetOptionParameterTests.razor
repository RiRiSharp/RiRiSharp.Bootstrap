@using RiRiSharp.Bootstrap.Core.Layout.Columns
@inherits TestContext


@code {
    [Theory]
    [InlineData(ColumnOptions.Sm, "col-sm")]
    [InlineData(ColumnOptions.Md, "col-md")]
    [InlineData(ColumnOptions.Lg, "col-lg")]
    [InlineData(ColumnOptions.Xl, "col-xl")]
    [InlineData(ColumnOptions.Xxl, "col-xxl")]
    public void BreakpointsWork(ColumnOptions columnOptions, string expectedClass)
    {
        var cut = Render(
            @<Column ColOption="columnOptions">
                <EmptyComponent/>
            </Column>
        );

        cut.MarkupMatches(
            @<div class="@(expectedClass)"></div>
        );
    }

    [Theory]
    [InlineData(ColumnOptions.Col1, "col-1")]
    [InlineData(ColumnOptions.Col2, "col-2")]
    [InlineData(ColumnOptions.Col3, "col-3")]
    [InlineData(ColumnOptions.Col4, "col-4")]
    [InlineData(ColumnOptions.Col5, "col-5")]
    [InlineData(ColumnOptions.Col6, "col-6")]
    [InlineData(ColumnOptions.Col7, "col-7")]
    [InlineData(ColumnOptions.Col8, "col-8")]
    [InlineData(ColumnOptions.Col9, "col-9")]
    [InlineData(ColumnOptions.Col10, "col-10")]
    [InlineData(ColumnOptions.Col11, "col-11")]
    [InlineData(ColumnOptions.Col12, "col-12")]
    [InlineData(ColumnOptions.ColAuto, "col-auto")]
    public void ColWidthsWork(ColumnOptions columnOptions, string expectedClass)
    {
        var cut = Render(
            @<Column ColOption="columnOptions">
                <EmptyComponent/>
            </Column>
        );

        cut.MarkupMatches(
            @<div class="@(expectedClass)"></div>
        );
    }

    [Theory]
    [InlineData(ColumnOptions.ColSm4, "col-sm-4")]
    [InlineData(ColumnOptions.ColMd4, "col-md-4")]
    [InlineData(ColumnOptions.ColMd12, "col-md-12")]
    [InlineData(ColumnOptions.ColLgAuto, "col-lg-auto")]
    [InlineData(ColumnOptions.ColLg7, "col-lg-7")]
    [InlineData(ColumnOptions.ColXl7, "col-xl-7")]
    [InlineData(ColumnOptions.ColXxl1, "col-xxl-1")]
    public void BreakpointsWithColumnsWork(ColumnOptions columnOptions, string expectedClass)
    {
        var cut = Render(
            @<Column ColOption="columnOptions">
                <EmptyComponent/>
            </Column>
        );

        cut.MarkupMatches(
            @<div class="@(expectedClass)"></div>
        );
    }
}